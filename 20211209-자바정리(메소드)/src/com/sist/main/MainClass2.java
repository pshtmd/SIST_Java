package com.sist.main;
//메소드 , 멤버변수만 잡으면 끄으ㅡㅡㅡㅡㅡ읕
//메소드 , 객체지향 
/*
 * main() => 조립기 ... 클래스는 따로 만들어서 여기에 불러서 조립해서 사용 
 * 
 * 한개의 파일에서 두 개이상의 클래스를 코딩할 경우
 * ==>public  class는 딱 한 번만 사용할 수 있음.
 */
// main이 public클래스니까 아래 클래스는 public 이 올 수 없음
class DateClass{ //여러기능의 메소드에서 사용할 경우 멤버변수로 사용해서 한번에 사용
	
	int year;
	int month;
	int week;
	int[] lastday= {31,28,31,30,31,30,
					31,31,30,31,30,31};
	
	//기능 1. 사용자로부터 입력을 받는다 => retrun형 int 
	//기능 2. 요일 구하는 기능 ==> int ==> 세분화...(윤년)계산 > boolean 기능 별도로 구현 // 윤년만 필요한 경우 필요 부분만 재사용 가능 세분화 굿
	//기능 3. 달력 출력 => void
	
	/*
	 * 변수값의 저장 순서
	 * 	=명시적
	 * 		 int a=10;   // 구현 불가능 ...불어올 수는 없고 선언만 가능!!!
	 * 	=초기화 블록
	 * 		{
	 * 			a=100;  ==>파일에서 읽어온 데이터를 대입하는 경우
	 * 					==> 연산자 사용하는 경우
	 * 					==> 메소드를 사용해서 인자값?을 주는 경우
	 * 		}
	 * 
	 * 	=생성자
	 * 		A()
	 * 		{
	 * 			a=200;
	 * 		}
	 * 
	 * =====================
	 * 멤버변수
	 * =====================
	 * 초기화 여부 확인
	 * 		-생성자'를 통한 초기화
	 * 		-초기화 블럭'을 통한 초기화 :클래스와 클래스 사이에 생성된 거
	 * 					... 두 개를 동시에 사용하진 않음 (저장 순서가 있기에)
	 * =====================
	 * 기능설정 (메소드)
	 * =====================
	 */
}
public class MainClass2 {//저작명?
	public static void main(String[] args) {
		{
			
		}
	}

}
